plugins {
  id 'java'
  id 'jacoco'
  id 'org.springframework.boot' version '3.2.5'
  id 'io.spring.dependency-management' version '1.1.6'
  // actuator info git
  // https://plugins.gradle.org/plugin/com.gorylenko.gradle-git-properties
  id 'com.gorylenko.gradle-git-properties' version '2.4.2'
}

group = 'ds.project'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

configurations {
  querydsl.extendsFrom compileClasspath
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}
repositories {
  mavenCentral()
}

dependencies {
  // spring boot
  implementation 'org.springframework.boot:spring-boot-starter'
  implementation 'org.springframework.boot:spring-boot-starter-validation'

  //test
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'

  // Web
  implementation 'org.springframework.boot:spring-boot-starter-web'

  //swagger
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

  //actuator
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

  //lombok
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testCompileOnly 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'

  //vault
  implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'

  // DB
  implementation 'com.mysql:mysql-connector-j'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  testImplementation 'com.h2database:h2'

  // redis
  implementation 'org.springframework.boot:spring-boot-starter-data-redis'

  // log
  implementation 'ch.qos.logback.contrib:logback-jackson:0.1.5'
  implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.5'
  implementation 'net.logstash.logback:logstash-logback-encoder:6.1'

  //aop
  implementation 'org.springframework.boot:spring-boot-starter-aop'

  //oauth2
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

  //jjwt
  implementation'io.jsonwebtoken:jjwt-api:0.12.6'
  implementation'io.jsonwebtoken:jjwt-impl:0.12.6'
  implementation'io.jsonwebtoken:jjwt-jackson:0.12.6'

  //minio
  implementation 'io.minio:minio:8.5.12'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.3"
  }
}

tasks.named('test') {
  finalizedBy jacocoTestReport
  useJUnitPlatform()
}

jacoco {
  toolVersion = "0.8.12"
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.required.set(true)
  }
  afterEvaluate {
    classDirectories.setFrom(
        files(classDirectories.files.collect {
          fileTree(dir: it, exclude: [
              '**/ds/project/toy/ToyApplication.class'
          ])
        })
    )
  }
}

jar {
  enabled = false
}

springBoot {
  buildInfo()
}